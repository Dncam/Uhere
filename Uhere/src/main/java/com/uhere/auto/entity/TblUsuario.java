package com.uhere.auto.entity;

import java.util.Calendar;
import java.util.List;

import javax.persistence.Cacheable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.ColumnDefault;
import org.hibernate.annotations.DynamicUpdate;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * TblGec generated by hbm2java
 */
@Entity
@DynamicUpdate(true)
@Cacheable(true)
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE,region="dojo2")
@Table(name = "TBL_USUARIO", catalog = "uherebd")
public class TblUsuario implements java.io.Serializable {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 138056390579421360L;

	@Id
	@Column(name = "cpfCnpj", unique = true, nullable = false, updatable=false, insertable=true)
	private Long cpfCnpj;
	
	@Column(name = "razaoSocial",unique = false, nullable = false, length = 40, updatable=true, insertable=true)
	private String razaoSocial;
	
	@Column(name = "nomeFantasia",unique = false, nullable = true, length = 20, updatable=true, insertable=true)
	private String nomeFantasia;	
	
	@ManyToOne(optional = true,cascade=CascadeType.REFRESH,fetch=FetchType.LAZY)
	@JoinColumn(name = "uf", referencedColumnName = "chave",foreignKey=@ForeignKey(name="ufcliente_fk"),unique=false, nullable=true, updatable=true, insertable=true)
	@Fetch(FetchMode.SELECT)
	private TblUf tblUf;
	
	@ManyToOne(optional = true,cascade=CascadeType.REFRESH,fetch=FetchType.LAZY)
	@JoinColumn(name = "cidade", referencedColumnName = "chave",foreignKey=@ForeignKey(name="cidade_fk"),unique=false, nullable=true, updatable=true, insertable=true)
	@Fetch(FetchMode.SELECT)
	private TblCidade tblCidade;
	
	@Column(name = "bairro",unique=false, nullable = true, length = 20, updatable=true, insertable=true)
	private String bairro;
	
	@Column(name = "cep",unique=false, nullable = true, updatable=true, insertable=true)
	private Long cep;
	
	@Column(name = "endereco",unique=false, nullable = true, length = 100, updatable=true, insertable=true)
	private String endereco;	
	
	@Column(name = "numero",unique=false, nullable = true, length = 10, updatable=true, insertable=true)
	private String numero;	
	
	@Column(name = "complemento",unique=false, nullable = true, length = 20, updatable=true, insertable=true)
	private String complemento;
	
	@Column(name = "senha",unique=false, nullable = false, length = 8, updatable=true, insertable=true)
	private String senha ;
	
	@Transient
	private String confirmarSenha;
	
	@Column(name = "email",unique=true, nullable = false, length = 50, updatable=false, insertable=true)
	private String email;
	
	@Column(name = "telefone",unique=false, nullable = true, updatable=true, insertable=true)
	private Long telefone;
	
	@Column(name = "celular",unique=false, nullable = true, updatable=true, insertable=true)
	private Long celular;
	
	@ManyToMany(cascade = {CascadeType.PERSIST},fetch=FetchType.LAZY)
	@JoinTable(name = "TBL_USUARIO_PERMISSOES", joinColumns = @JoinColumn(name = "cpfCnpj"), inverseJoinColumns = @JoinColumn(name = "chave"))
	@Fetch(FetchMode.SELECT)
	private List<TblPermissoes> tblPermissoes;
	
	@Column(name = "ativo",unique=false, nullable = false, updatable=true, insertable=true)
	@ColumnDefault(value="false")
	private Boolean ativo;

	@Column(name="dataExpirar", unique=false,nullable=true,insertable=true,updatable=true)
	@Temporal(TemporalType.TIMESTAMP)
	private Calendar dataExpirar;
	
	@Column(name = "token",unique=false,nullable=true,insertable=true,updatable=true)
	private String token;
	
	@Column(name = "nAnuncios",unique=false,nullable=true,insertable=true,updatable=true)
	private Integer nAnuncios;
	
	public TblUsuario() {
		super();
	}

	
	public TblUsuario(String email) {
		super();
		this.email = email;
	}


	public TblUsuario(Long cpfCnpj, String razaoSocial, String nomeFantasia, TblUf tblUf, TblCidade tblCidade,
			String bairro, Long cep, String endereco, String numero, String complemento, String senha,
			String confirmarSenha, String email, Long telefone, Long celular, List<TblPermissoes> tblPermissoes,
			Boolean ativo, Calendar dataExpirar, String token, Integer nAnuncios) {
		super();
		this.cpfCnpj = cpfCnpj;
		this.razaoSocial = razaoSocial;
		this.nomeFantasia = nomeFantasia;
		this.tblUf = tblUf;
		this.tblCidade = tblCidade;
		this.bairro = bairro;
		this.cep = cep;
		this.endereco = endereco;
		this.numero = numero;
		this.complemento = complemento;
		this.senha = senha;
		this.confirmarSenha = confirmarSenha;
		this.email = email;
		this.telefone = telefone;
		this.celular = celular;
		this.tblPermissoes = tblPermissoes;
		this.ativo = ativo;
		this.dataExpirar = dataExpirar;
		this.token = token;
		this.nAnuncios = nAnuncios;
	}


	public Long getCpfCnpj() {
		return cpfCnpj;
	}


	public void setCpfCnpj(Long cpfCnpj) {
		this.cpfCnpj = cpfCnpj;
	}


	public String getRazaoSocial() {
		return razaoSocial;
	}


	public void setRazaoSocial(String razaoSocial) {
		this.razaoSocial = razaoSocial;
	}


	public String getNomeFantasia() {
		return nomeFantasia;
	}


	public void setNomeFantasia(String nomeFantasia) {
		this.nomeFantasia = nomeFantasia;
	}


	public TblUf getTblUf() {
		return tblUf;
	}


	public void setTblUf(TblUf tblUf) {
		this.tblUf = tblUf;
	}


	public TblCidade getTblCidade() {
		return tblCidade;
	}


	public void setTblCidade(TblCidade tblCidade) {
		this.tblCidade = tblCidade;
	}


	public String getBairro() {
		return bairro;
	}


	public void setBairro(String bairro) {
		this.bairro = bairro;
	}


	public Long getCep() {
		return cep;
	}


	public void setCep(Long cep) {
		this.cep = cep;
	}


	public String getEndereco() {
		return endereco;
	}


	public void setEndereco(String endereco) {
		this.endereco = endereco;
	}


	public String getNumero() {
		return numero;
	}


	public void setNumero(String numero) {
		this.numero = numero;
	}


	public String getComplemento() {
		return complemento;
	}


	public void setComplemento(String complemento) {
		this.complemento = complemento;
	}


	public String getSenha() {
		return senha;
	}


	public void setSenha(String senha) {
		this.senha = senha;
	}


	public String getConfirmarSenha() {
		return confirmarSenha;
	}


	public void setConfirmarSenha(String confirmarSenha) {
		this.confirmarSenha = confirmarSenha;
	}


	public String getEmail() {
		return email;
	}


	public void setEmail(String email) {
		this.email = email;
	}


	public Long getTelefone() {
		return telefone;
	}


	public void setTelefone(Long telefone) {
		this.telefone = telefone;
	}


	public Long getCelular() {
		return celular;
	}


	public void setCelular(Long celular) {
		this.celular = celular;
	}


	public List<TblPermissoes> getTblPermissoes() {
		return tblPermissoes;
	}


	public void setTblPermissoes(List<TblPermissoes> tblPermissoes) {
		this.tblPermissoes = tblPermissoes;
	}


	public Boolean getAtivo() {
		return ativo;
	}


	public void setAtivo(Boolean ativo) {
		this.ativo = ativo;
	}


	public Calendar getDataExpirar() {
		return dataExpirar;
	}


	public void setDataExpirar(Calendar dataExpirar) {
		this.dataExpirar = dataExpirar;
	}


	public String getToken() {
		return token;
	}


	public void setToken(String token) {
		this.token = token;
	}


	public Integer getnAnuncios() {
		return nAnuncios;
	}


	public void setnAnuncios(Integer nAnuncios) {
		this.nAnuncios = nAnuncios;
	}

	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((ativo == null) ? 0 : ativo.hashCode());
		result = prime * result + ((bairro == null) ? 0 : bairro.hashCode());
		result = prime * result + ((celular == null) ? 0 : celular.hashCode());
		result = prime * result + ((cep == null) ? 0 : cep.hashCode());
		result = prime * result + ((complemento == null) ? 0 : complemento.hashCode());
		result = prime * result + ((confirmarSenha == null) ? 0 : confirmarSenha.hashCode());
		result = prime * result + ((cpfCnpj == null) ? 0 : cpfCnpj.hashCode());
		result = prime * result + ((dataExpirar == null) ? 0 : dataExpirar.hashCode());
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((endereco == null) ? 0 : endereco.hashCode());
		result = prime * result + ((nAnuncios == null) ? 0 : nAnuncios.hashCode());
		result = prime * result + ((nomeFantasia == null) ? 0 : nomeFantasia.hashCode());
		result = prime * result + ((numero == null) ? 0 : numero.hashCode());
		result = prime * result + ((razaoSocial == null) ? 0 : razaoSocial.hashCode());
		result = prime * result + ((senha == null) ? 0 : senha.hashCode());
		result = prime * result + ((tblCidade == null) ? 0 : tblCidade.hashCode());
		result = prime * result + ((tblPermissoes == null) ? 0 : tblPermissoes.hashCode());
		result = prime * result + ((tblUf == null) ? 0 : tblUf.hashCode());
		result = prime * result + ((telefone == null) ? 0 : telefone.hashCode());
		result = prime * result + ((token == null) ? 0 : token.hashCode());
		return result;
	}


	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TblUsuario other = (TblUsuario) obj;
		if (ativo == null) {
			if (other.ativo != null)
				return false;
		} else if (!ativo.equals(other.ativo))
			return false;
		if (bairro == null) {
			if (other.bairro != null)
				return false;
		} else if (!bairro.equals(other.bairro))
			return false;
		if (celular == null) {
			if (other.celular != null)
				return false;
		} else if (!celular.equals(other.celular))
			return false;
		if (cep == null) {
			if (other.cep != null)
				return false;
		} else if (!cep.equals(other.cep))
			return false;
		if (complemento == null) {
			if (other.complemento != null)
				return false;
		} else if (!complemento.equals(other.complemento))
			return false;
		if (confirmarSenha == null) {
			if (other.confirmarSenha != null)
				return false;
		} else if (!confirmarSenha.equals(other.confirmarSenha))
			return false;
		if (cpfCnpj == null) {
			if (other.cpfCnpj != null)
				return false;
		} else if (!cpfCnpj.equals(other.cpfCnpj))
			return false;
		if (dataExpirar == null) {
			if (other.dataExpirar != null)
				return false;
		} else if (!dataExpirar.equals(other.dataExpirar))
			return false;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (endereco == null) {
			if (other.endereco != null)
				return false;
		} else if (!endereco.equals(other.endereco))
			return false;
		if (nAnuncios == null) {
			if (other.nAnuncios != null)
				return false;
		} else if (!nAnuncios.equals(other.nAnuncios))
			return false;
		if (nomeFantasia == null) {
			if (other.nomeFantasia != null)
				return false;
		} else if (!nomeFantasia.equals(other.nomeFantasia))
			return false;
		if (numero == null) {
			if (other.numero != null)
				return false;
		} else if (!numero.equals(other.numero))
			return false;
		if (razaoSocial == null) {
			if (other.razaoSocial != null)
				return false;
		} else if (!razaoSocial.equals(other.razaoSocial))
			return false;
		if (senha == null) {
			if (other.senha != null)
				return false;
		} else if (!senha.equals(other.senha))
			return false;
		if (tblCidade == null) {
			if (other.tblCidade != null)
				return false;
		} else if (!tblCidade.equals(other.tblCidade))
			return false;
		if (tblPermissoes == null) {
			if (other.tblPermissoes != null)
				return false;
		} else if (!tblPermissoes.equals(other.tblPermissoes))
			return false;
		if (tblUf == null) {
			if (other.tblUf != null)
				return false;
		} else if (!tblUf.equals(other.tblUf))
			return false;
		if (telefone == null) {
			if (other.telefone != null)
				return false;
		} else if (!telefone.equals(other.telefone))
			return false;
		if (token == null) {
			if (other.token != null)
				return false;
		} else if (!token.equals(other.token))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "TblUsuario [cpfCnpj=" + cpfCnpj + ", razaoSocial=" + razaoSocial + ", nomeFantasia=" + nomeFantasia
				+ ", tblUf=" + tblUf + ", tblCidade=" + tblCidade + ", bairro=" + bairro + ", cep=" + cep
				+ ", endereco=" + endereco + ", numero=" + numero + ", complemento=" + complemento + ", senha=" + senha
				+ ", confirmarSenha=" + confirmarSenha + ", email=" + email + ", telefone=" + telefone + ", celular="
				+ celular + ", tblPermissoes=" + tblPermissoes + ", ativo=" + ativo + ", dataExpirar=" + dataExpirar
				+ ", token=" + token + ", nAnuncios=" + nAnuncios + "]";
	}

}
