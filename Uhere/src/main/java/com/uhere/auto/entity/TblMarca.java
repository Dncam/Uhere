package com.uhere.auto.entity;

import java.util.Arrays;
import java.util.List;

import javax.persistence.Cacheable;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * TblGec generated by hbm2java
 */
@Entity
@Cacheable(true)
@Cache(usage=CacheConcurrencyStrategy.READ_ONLY,region="eternal")
@Table(name = "TBL_MARCA", catalog = "uherebd")
public class TblMarca implements java.io.Serializable {


	/**
	 * 
	 */
	private static final long serialVersionUID = -3887886686514274465L;

	/**
	 * 
	 */


	@Id
	@Column(name = "chave", unique = true, nullable = false,insertable=false,updatable=false)
	private Long chave;

	@Column(name = "descricao", length = 15, unique = false, nullable = false,insertable=false,updatable=false)
	private String descricao;

	@Lob
	@Column(name = "logo")
	private byte[] logo;

	@OneToMany(mappedBy = "tblMarca", cascade = CascadeType.ALL,fetch=FetchType.LAZY)
	@Fetch(FetchMode.JOIN)
	private List<TblModelo> tblModelos;

	public TblMarca() {
		super();
	}

	public TblMarca(Long chave) {
		super();
		this.chave = chave;
	}

	public TblMarca(Long chave, String descricao, byte[] logo, List<TblModelo> tblModelos) {
		super();
		this.chave = chave;
		this.descricao = descricao;
		this.logo = logo;
		this.tblModelos = tblModelos;
	}

	public Long getChave() {
		return chave;
	}

	public void setChave(Long chave) {
		this.chave = chave;
	}

	public String getDescricao() {
		return descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	public byte[] getLogo() {
		return logo;
	}

	public void setLogo(byte[] logo) {
		this.logo = logo;
	}

	public List<TblModelo> getTblModelos() {
		return tblModelos;
	}

	public void setTblModelos(List<TblModelo> tblModelos) {
		this.tblModelos = tblModelos;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + (int) (chave ^ (chave >>> 32));
		result = prime * result + ((descricao == null) ? 0 : descricao.hashCode());
		result = prime * result + Arrays.hashCode(logo);
		result = prime * result + ((tblModelos == null) ? 0 : tblModelos.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TblMarca other = (TblMarca) obj;
		if (chave != other.chave)
			return false;
		if (descricao == null) {
			if (other.descricao != null)
				return false;
		} else if (!descricao.equals(other.descricao))
			return false;
		if (!Arrays.equals(logo, other.logo))
			return false;
		if (tblModelos == null) {
			if (other.tblModelos != null)
				return false;
		} else if (!tblModelos.equals(other.tblModelos))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "TblMarca [chave=" + chave + ", descricao=" + descricao + ", logo=" + Arrays.toString(logo)
				+ ", tblModelos=" + tblModelos + "]";
	}
}
